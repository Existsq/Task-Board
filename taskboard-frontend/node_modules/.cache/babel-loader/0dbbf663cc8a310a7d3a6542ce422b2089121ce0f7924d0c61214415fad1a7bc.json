{"ast":null,"code":"var _jsxFileName = \"/Users/exist/Desktop/work/taskboard-frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nimport { useAuthProvider } from \"../hooks/useAuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const auth = useAuthProvider();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"U5QEqN6sgp/9Kus+ung4cQwYnRk=\", false, function () {\n  return [useAuthProvider];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useAuthProvider","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, ReactNode } from \"react\";\nimport { useAuthProvider } from \"../hooks/useAuthProvider\";\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nexport interface User {\n  id: string;\n  email: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const auth = useAuthProvider();\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAmB,OAAO;AAC5D,SAASC,eAAe,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB3D,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAkC,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAMC,IAAI,GAAGR,eAAe,CAAC,CAAC;EAC9B,oBAAOE,OAAA,CAACC,WAAW,CAACM,QAAQ;IAACC,KAAK,EAAEF,IAAK;IAAAF,QAAA,EAAEA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC7E;AAACP,EAAA,CAHeF,YAAY;EAAA,QACbL,eAAe;AAAA;AAAAe,EAAA,GADdV,YAAY;AAK5B,OAAO,SAASW,OAAOA,CAAA,EAAoB;EAAAC,GAAA;EACzC,MAAMC,OAAO,GAAGnB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACe,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}