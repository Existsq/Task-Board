{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getMeApi, loginApi, registerApi } from \"../api/auth\";\nimport { saveToken, clearToken, getStoredToken } from \"../utils/token\";\nexport function useAuthProvider() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = getStoredToken();\n    if (!token) {\n      setIsLoading(false);\n      return;\n    }\n    saveToken(token); // ставим заголовок\n\n    getMeApi().then(user => {\n      setUser(user);\n      setIsAuthenticated(true);\n    }).catch(() => {\n      setUser(null);\n      setIsAuthenticated(false);\n    }).finally(() => setIsLoading(false));\n  }, []);\n  async function login(email, password) {\n    const token = await loginApi(email, password);\n    saveToken(token);\n    const user = await getMeApi();\n    setUser(user);\n    setIsAuthenticated(true);\n  }\n  async function register(email, password) {\n    const token = await registerApi(email, password);\n    saveToken(token);\n    const user = await getMeApi();\n    setUser(user);\n    setIsAuthenticated(true);\n  }\n  function logout() {\n    clearToken();\n    setUser(null);\n    setIsAuthenticated(false);\n  }\n  return {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout\n  };\n}\n_s(useAuthProvider, \"BKa16Kz0rM4B0y8AT6EXjU1HOY4=\");","map":{"version":3,"names":["useState","useEffect","getMeApi","loginApi","registerApi","saveToken","clearToken","getStoredToken","useAuthProvider","_s","user","setUser","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","token","then","catch","finally","login","email","password","register","logout"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/hooks/useAuthProvider.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getMeApi, loginApi, registerApi } from \"../api/auth\";\nimport { saveToken, clearToken, getStoredToken } from \"../utils/token\";\n\n\nexport function useAuthProvider() {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const token = getStoredToken();\n    if (!token) {\n      setIsLoading(false);\n      return;\n    }\n\n    saveToken(token); // ставим заголовок\n\n    getMeApi()\n      .then((user) => {\n        setUser(user);\n        setIsAuthenticated(true);\n      })\n      .catch(() => {\n        setUser(null);\n        setIsAuthenticated(false);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  async function login(email: string, password: string) {\n    const token = await loginApi(email, password);\n    saveToken(token);\n    const user = await getMeApi();\n    setUser(user);\n    setIsAuthenticated(true);\n  }\n\n  async function register(email: string, password: string) {\n    const token = await registerApi(email, password);\n    saveToken(token);\n    const user = await getMeApi();\n    setUser(user);\n    setIsAuthenticated(true);\n  }\n\n  function logout() {\n    clearToken();\n    setUser(null);\n    setIsAuthenticated(false);\n  }\n\n  return { user, isAuthenticated, isLoading, login, register, logout };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,aAAa;AAC7D,SAASC,SAAS,EAAEC,UAAU,EAAEC,cAAc,QAAQ,gBAAgB;AAGtE,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGT,cAAc,CAAC,CAAC;IAC9B,IAAI,CAACS,KAAK,EAAE;MACVH,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEAR,SAAS,CAACW,KAAK,CAAC,CAAC,CAAC;;IAElBd,QAAQ,CAAC,CAAC,CACPe,IAAI,CAAEP,IAAI,IAAK;MACdC,OAAO,CAACD,IAAI,CAAC;MACbK,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDG,KAAK,CAAC,MAAM;MACXP,OAAO,CAAC,IAAI,CAAC;MACbI,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,CACDI,OAAO,CAAC,MAAMN,YAAY,CAAC,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeO,KAAKA,CAACC,KAAa,EAAEC,QAAgB,EAAE;IACpD,MAAMN,KAAK,GAAG,MAAMb,QAAQ,CAACkB,KAAK,EAAEC,QAAQ,CAAC;IAC7CjB,SAAS,CAACW,KAAK,CAAC;IAChB,MAAMN,IAAI,GAAG,MAAMR,QAAQ,CAAC,CAAC;IAC7BS,OAAO,CAACD,IAAI,CAAC;IACbK,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEA,eAAeQ,QAAQA,CAACF,KAAa,EAAEC,QAAgB,EAAE;IACvD,MAAMN,KAAK,GAAG,MAAMZ,WAAW,CAACiB,KAAK,EAAEC,QAAQ,CAAC;IAChDjB,SAAS,CAACW,KAAK,CAAC;IAChB,MAAMN,IAAI,GAAG,MAAMR,QAAQ,CAAC,CAAC;IAC7BS,OAAO,CAACD,IAAI,CAAC;IACbK,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEA,SAASS,MAAMA,CAAA,EAAG;IAChBlB,UAAU,CAAC,CAAC;IACZK,OAAO,CAAC,IAAI,CAAC;IACbI,kBAAkB,CAAC,KAAK,CAAC;EAC3B;EAEA,OAAO;IAAEL,IAAI;IAAEI,eAAe;IAAEF,SAAS;IAAEQ,KAAK;IAAEG,QAAQ;IAAEC;EAAO,CAAC;AACtE;AAACf,EAAA,CAjDeD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}