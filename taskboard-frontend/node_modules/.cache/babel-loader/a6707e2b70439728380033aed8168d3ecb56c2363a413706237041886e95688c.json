{"ast":null,"code":"var _jsxFileName = \"/Users/exist/Desktop/work/taskboard-frontend/src/pages/dashboard/DashboardContent.tsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/joy\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport TaskTable from \"../../components/dashboard/TaskTable\";\nimport Sidebar from \"../../components/dashboard/sidebar/Sidebar\";\nimport { useTasks } from \"../../hooks/useTasks\";\nimport { useState } from \"react\";\nimport EditTaskModal from \"../../components/dashboard/EditTaskModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardContent() {\n  _s();\n  const {\n    rows,\n    loading,\n    deleteTask,\n    refresh,\n    updateTask\n  } = useTasks();\n  const [editingTask, setEditingTask] = useState(null);\n\n  // Map Task to RowType for TaskTable and TaskList\n  const tableRows = rows.map(task => ({\n    id: task.id,\n    title: task.title,\n    description: task.description,\n    status: task.status.charAt(0).toUpperCase() + task.status.slice(1).toLowerCase(),\n    // Normalize to New, In_progress, Completed\n    dueDate: task.dueDate,\n    date: task.dueDate,\n    // Adjust based on actual createdAt field\n    until: task.dueDate\n  }));\n  const handleDelete = async id => {\n    await deleteTask(id);\n    refresh();\n  };\n  const handleEdit = id => {\n    const task = tableRows.find(r => r.id === id);\n    if (task) setEditingTask(task);\n  };\n  const handleUpdate = async updatedTask => {\n    await updateTask({\n      ...updatedTask,\n      id: String(updatedTask.id)\n    });\n    setEditingTask(null);\n    refresh();\n  };\n  const handleCloseEdit = () => {\n    setEditingTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      minHeight: \"100dvh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onTaskCreated: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      className: \"MainContent\",\n      sx: {\n        px: {\n          xs: 2,\n          md: 6\n        },\n        pt: {\n          xs: \"calc(12px + var(--Header-height))\",\n          sm: \"calc(12px + var(--Header-height))\",\n          md: 3\n        },\n        pb: {\n          xs: 2,\n          sm: 2,\n          md: 3\n        },\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        minWidth: 0,\n        height: \"100dvh\",\n        gap: 1,\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DashboardHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n        rows: tableRows,\n        loading: loading,\n        onDelete: handleDelete,\n        onEdit: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n        task: {\n          id: editingTask.id,\n          title: editingTask.title,\n          description: editingTask.description,\n          dueDate: editingTask.dueDate,\n          status: editingTask.status\n        },\n        onClose: handleCloseEdit,\n        onSave: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardContent, \"BhoFRYIMYbLjlouWWZFMejKbeJ0=\", false, function () {\n  return [useTasks];\n});\n_c = DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["Box","DashboardHeader","TaskTable","Sidebar","useTasks","useState","EditTaskModal","jsxDEV","_jsxDEV","DashboardContent","_s","rows","loading","deleteTask","refresh","updateTask","editingTask","setEditingTask","tableRows","map","task","id","title","description","status","charAt","toUpperCase","slice","toLowerCase","dueDate","date","until","handleDelete","handleEdit","find","r","handleUpdate","updatedTask","String","handleCloseEdit","sx","display","minHeight","children","onTaskCreated","fileName","_jsxFileName","lineNumber","columnNumber","component","className","px","xs","md","pt","sm","pb","flex","flexDirection","minWidth","height","gap","overflow","onDelete","onEdit","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/pages/dashboard/DashboardContent.tsx"],"sourcesContent":["import { Box } from \"@mui/joy\";\nimport TaskList from \"../../components/dashboard/TaskList\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport TaskTable, { RowType } from \"../../components/dashboard/TaskTable\";\nimport Sidebar from \"../../components/dashboard/sidebar/Sidebar\";\nimport { useTasks } from \"../../hooks/useTasks\";\nimport { useState } from \"react\";\nimport EditTaskModal from \"../../components/dashboard/EditTaskModal\";\n\nexport type Task = {\n  id: string;\n  title: string;\n  description: string;\n  dueDate: string;\n  status: string;\n};\n\nexport default function DashboardContent() {\n  const { rows, loading, deleteTask, refresh, updateTask } = useTasks();\n\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\n\n  // Map Task to RowType for TaskTable and TaskList\n  const tableRows: RowType[] = rows.map((task) => ({\n    id: task.id,\n    title: task.title,\n    description: task.description,\n    status:\n      task.status.charAt(0).toUpperCase() + task.status.slice(1).toLowerCase(), // Normalize to New, In_progress, Completed\n    dueDate: task.dueDate,\n    date: task.dueDate, // Adjust based on actual createdAt field\n    until: task.dueDate,\n  }));\n\n  const handleDelete = async (id: string) => {\n    await deleteTask(id);\n    refresh();\n  };\n\n  const handleEdit = (id: string) => {\n    const task = tableRows.find((r) => r.id === id);\n    if (task) setEditingTask(task);\n  };\n\n  const handleUpdate = async (updatedTask: Task) => {\n    await updateTask({\n      ...updatedTask,\n      id: String(updatedTask.id),\n    });\n    setEditingTask(null);\n    refresh();\n  };\n\n  const handleCloseEdit = () => {\n    setEditingTask(null);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", minHeight: \"100dvh\" }}>\n      <Sidebar onTaskCreated={refresh} />\n\n      <Box\n        component=\"main\"\n        className=\"MainContent\"\n        sx={{\n          px: { xs: 2, md: 6 },\n          pt: {\n            xs: \"calc(12px + var(--Header-height))\",\n            sm: \"calc(12px + var(--Header-height))\",\n            md: 3,\n          },\n          pb: { xs: 2, sm: 2, md: 3 },\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n          height: \"100dvh\",\n          gap: 1,\n          overflow: \"auto\",\n        }}\n      >\n        <DashboardHeader />\n        <TaskTable\n          rows={tableRows}\n          loading={loading}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n        />\n        {editingTask && (\n          <EditTaskModal\n            task={{\n              id: editingTask.id,\n              title: editingTask.title,\n              description: editingTask.description,\n              dueDate: editingTask.dueDate,\n              status: editingTask.status,\n            }}\n            onClose={handleCloseEdit}\n            onSave={handleUpdate}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}