{"ast":null,"code":"import _objectSpread from\"/Users/exist/Desktop/work/taskboard-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE=\"/api/v1/tasks\";function formatDueDate(dueDate){const date=new Date(dueDate);const pad=n=>n.toString().padStart(2,\"0\");const month=pad(date.getMonth()+1);const day=pad(date.getDate());const year=date.getFullYear();const hours=pad(date.getHours());const minutes=pad(date.getMinutes());return\"\".concat(month,\"/\").concat(day,\"/\").concat(year,\" \").concat(hours,\":\").concat(minutes);}export async function getTasks(params){const token=localStorage.getItem(\"jwt\");const query=params?\"?\"+new URLSearchParams(params).toString():\"\";const res=await fetch(\"\".concat(API_BASE).concat(query),{headers:{Authorization:\"Bearer \".concat(token)}});if(!res.ok)throw new Error(\"Ошибка при получении задач\");return res.json();}export async function deleteTask(id){const token=localStorage.getItem(\"jwt\");const res=await fetch(\"\".concat(API_BASE,\"/\").concat(id),{method:\"DELETE\",headers:{Authorization:\"Bearer \".concat(token)}});if(!res.ok){throw new Error(\"Не удалось удалить задачу\");}}export async function createTask(task){const token=localStorage.getItem(\"jwt\");const formattedTask=_objectSpread(_objectSpread({},task),{},{dueDate:formatDueDate(task.dueDate)});const res=await fetch(API_BASE,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify(formattedTask)});if(!res.ok){throw new Error(\"Не удалось создать задачу\");}return res.json();}export async function updateTask(task){const token=localStorage.getItem(\"jwt\");const formattedTask=_objectSpread(_objectSpread({},task),{},{dueDate:formatDueDate(task.dueDate),status:task.status.toUpperCase()});const res=await fetch(\"\".concat(API_BASE,\"/\").concat(task.id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify(formattedTask)});if(!res.ok){throw new Error(\"Не удалось обновить задачу\");}return res.json();}","map":{"version":3,"names":["API_BASE","formatDueDate","dueDate","date","Date","pad","n","toString","padStart","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","concat","getTasks","params","token","localStorage","getItem","query","URLSearchParams","res","fetch","headers","Authorization","ok","Error","json","deleteTask","id","method","createTask","task","formattedTask","_objectSpread","body","JSON","stringify","updateTask","status","toUpperCase"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/api/task.ts"],"sourcesContent":["const API_BASE = \"/api/v1/tasks\";\n\nexport type TaskResponse = {\n  id: number;\n  title: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n  status: string;\n  dueDate: string;\n};\n\nfunction formatDueDate(dueDate: string): string {\n  const date = new Date(dueDate);\n  const pad = (n: number) => n.toString().padStart(2, \"0\");\n\n  const month = pad(date.getMonth() + 1);\n  const day = pad(date.getDate());\n  const year = date.getFullYear();\n  const hours = pad(date.getHours());\n  const minutes = pad(date.getMinutes());\n\n  return `${month}/${day}/${year} ${hours}:${minutes}`;\n}\n\nexport async function getTasks(params?: Record<string, string>) {\n  const token = localStorage.getItem(\"jwt\");\n\n  const query = params\n    ? \"?\" + new URLSearchParams(params).toString()\n    : \"\";\n\n  const res = await fetch(`${API_BASE}${query}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (!res.ok) throw new Error(\"Ошибка при получении задач\");\n  return res.json();\n}\n\nexport async function deleteTask(id: number): Promise<void> {\n  const token = localStorage.getItem(\"jwt\");\n  const res = await fetch(`${API_BASE}/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (!res.ok) {\n    throw new Error(\"Не удалось удалить задачу\");\n  }\n}\n\nexport async function createTask(task: {\n  title: string;\n  description: string;\n  dueDate: string;\n  status: string;\n}) {\n  const token = localStorage.getItem(\"jwt\");\n\n  const formattedTask = {\n    ...task,\n    dueDate: formatDueDate(task.dueDate),\n  };\n\n  const res = await fetch(API_BASE, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(formattedTask),\n  });\n\n  if (!res.ok) {\n    throw new Error(\"Не удалось создать задачу\");\n  }\n\n  return res.json();\n}\n\nexport async function updateTask(task: {\n  id: number;\n  title: string;\n  description: string;\n  dueDate: string;\n  status: string;\n}) {\n  const token = localStorage.getItem(\"jwt\");\n\n  const formattedTask = {\n    ...task,\n    dueDate: formatDueDate(task.dueDate),\n    status: task.status.toUpperCase(),\n  };\n\n  const res = await fetch(`${API_BASE}/${task.id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(formattedTask),\n  });\n\n  if (!res.ok) {\n    throw new Error(\"Не удалось обновить задачу\");\n  }\n\n  return res.json();\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}