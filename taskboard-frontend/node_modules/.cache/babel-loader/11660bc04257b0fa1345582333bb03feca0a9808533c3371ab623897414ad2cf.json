{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { getTasks } from \"../api/task\";\nexport function useTasks() {\n  _s();\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const loadTasks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await getTasks();\n      const mapped = data.map(task => ({\n        id: String(task.id),\n        title: String(task.title),\n        date: new Date(task.createdAt).toLocaleDateString(),\n        status: task.status[0] + task.status.substring(1).toLowerCase,\n        customer: {\n          initial: task.userId[0].toUpperCase() || \"?\",\n          name: task.userId,\n          email: task.userId\n        }\n      }));\n      setRows(mapped);\n      setError(null);\n    } catch (err) {\n      console.error(\"Ошибка при загрузке задач\", err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks]);\n  return {\n    rows,\n    loading,\n    error,\n    refresh: loadTasks\n  };\n}\n_s(useTasks, \"cXN4Xp7OEhKAX5tR0NyNN0pe5RA=\");","map":{"version":3,"names":["useCallback","useEffect","useState","getTasks","useTasks","_s","rows","setRows","loading","setLoading","error","setError","loadTasks","data","mapped","map","task","id","String","title","date","Date","createdAt","toLocaleDateString","status","substring","toLowerCase","customer","initial","userId","toUpperCase","name","email","err","console","refresh"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/hooks/useTasks.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { getTasks, TaskResponse } from \"../api/task\";\n\ntype RowType = {\n  id: string;\n  date: string;\n  status: string;\n  customer: {\n    initial: string;\n    name: string;\n    email: string;\n  };\n};\n\nexport function useTasks() {\n  const [rows, setRows] = useState<RowType[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  const loadTasks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data: TaskResponse[] = await getTasks();\n      const mapped: RowType[] = data.map((task) => ({\n        id: String(task.id),\n        title: String(task.title),\n        date: new Date(task.createdAt).toLocaleDateString(),\n        status: task.status[0] + task.status.substring(1).toLowerCase,\n        customer: {\n          initial: task.userId[0].toUpperCase() || \"?\",\n          name: task.userId,\n          email: task.userId,\n        },\n      }));\n      setRows(mapped);\n      setError(null);\n    } catch (err) {\n      console.error(\"Ошибка при загрузке задач\", err);\n      setError(err as Error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks]);\n\n  return { rows, loading, error, refresh: loadTasks };\n}"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAsB,aAAa;AAapD,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAY,EAAE,CAAC;EAC/C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAe,IAAI,CAAC;EAEtD,MAAMU,SAAS,GAAGZ,WAAW,CAAC,YAAY;IACxCS,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,IAAoB,GAAG,MAAMV,QAAQ,CAAC,CAAC;MAC7C,MAAMW,MAAiB,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;QAC5CC,EAAE,EAAEC,MAAM,CAACF,IAAI,CAACC,EAAE,CAAC;QACnBE,KAAK,EAAED,MAAM,CAACF,IAAI,CAACG,KAAK,CAAC;QACzBC,IAAI,EAAE,IAAIC,IAAI,CAACL,IAAI,CAACM,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;QACnDC,MAAM,EAAER,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAC,GAAGR,IAAI,CAACQ,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW;QAC7DC,QAAQ,EAAE;UACRC,OAAO,EAAEZ,IAAI,CAACa,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,IAAI,GAAG;UAC5CC,IAAI,EAAEf,IAAI,CAACa,MAAM;UACjBG,KAAK,EAAEhB,IAAI,CAACa;QACd;MACF,CAAC,CAAC,CAAC;MACHtB,OAAO,CAACO,MAAM,CAAC;MACfH,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZC,OAAO,CAACxB,KAAK,CAAC,2BAA2B,EAAEuB,GAAG,CAAC;MAC/CtB,QAAQ,CAACsB,GAAY,CAAC;IACxB,CAAC,SAAS;MACRxB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,OAAO;IAAEN,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEyB,OAAO,EAAEvB;EAAU,CAAC;AACrD;AAACP,EAAA,CAnCeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}