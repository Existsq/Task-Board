{"ast":null,"code":"var _jsxFileName = \"/Users/exist/Desktop/work/taskboard-frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Опишем интерфейс контекста\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Значение по умолчанию (можно временно null, потом проверять в хуке)\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  }, [token]);\n  const login = async (email, password) => {\n    const res = await axios.post(\"http://localhost:9090/api/v1/auth/login\", {\n      email,\n      password\n    });\n    const t = res.data.token;\n    setToken(t);\n    localStorage.setItem(\"token\", t);\n  };\n  const register = async (email, password) => {\n    const res = await axios.post(\"http://localhost:9090/api/v1/auth/register\", {\n      email,\n      password\n    });\n    const t = res.data.token;\n    setToken(t);\n    localStorage.setItem(\"token\", t);\n  };\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"Q+aL11DnTzdNSb9hdmXn0SgiUDI=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","token","setToken","localStorage","getItem","defaults","headers","common","login","email","password","res","post","t","data","setItem","register","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\nimport axios from \"axios\";\n\n// Опишем интерфейс контекста\ninterface AuthContextType {\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\n// Значение по умолчанию (можно временно null, потом проверять в хуке)\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [token, setToken] = useState<string | null>(localStorage.getItem(\"token\"));\n\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  }, [token]);\n\n  const login = async (email: string, password: string) => {\n    const res = await axios.post(\"http://localhost:9090/api/v1/auth/login\", { email, password });\n    const t = res.data.token;\n    setToken(t);\n    localStorage.setItem(\"token\", t);\n  };\n\n  const register = async (email: string, password: string) => {\n    const res = await axios.post(\"http://localhost:9090/api/v1/auth/register\", { email, password });\n    const t = res.data.token;\n    setToken(t);\n    localStorage.setItem(\"token\", t);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAMzE,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAA4B,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgBY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEhFZ,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,EAAE;MACTR,KAAK,CAACY,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,KAAK,EAAE;IACpE,CAAC,MAAM;MACL,OAAOR,KAAK,CAACY,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD;EACF,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,yCAAyC,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC5F,MAAMG,CAAC,GAAGF,GAAG,CAACG,IAAI,CAACb,KAAK;IACxBC,QAAQ,CAACW,CAAC,CAAC;IACXV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEF,CAAC,CAAC;EAClC,CAAC;EAED,MAAMG,QAAQ,GAAG,MAAAA,CAAOP,KAAa,EAAEC,QAAgB,KAAK;IAC1D,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,4CAA4C,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC/F,MAAMG,CAAC,GAAGF,GAAG,CAACG,IAAI,CAACb,KAAK;IACxBC,QAAQ,CAACW,CAAC,CAAC;IACXV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEF,CAAC,CAAC;EAClC,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBf,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,KAAK;MAAEO,KAAK;MAAEQ,QAAQ;MAAEC;IAAO,CAAE;IAAAlB,QAAA,EAC7DA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACxB,EAAA,CAnCeF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAqC5B,OAAO,SAAS4B,OAAOA,CAAA,EAAoB;EAAAC,GAAA;EACzC,MAAMC,OAAO,GAAGtC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACgC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}