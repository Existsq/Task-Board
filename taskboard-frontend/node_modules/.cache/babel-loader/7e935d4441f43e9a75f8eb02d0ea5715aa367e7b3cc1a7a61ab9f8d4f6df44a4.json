{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { updateTask as apiUpdateTask } from \"../api/task\";\nimport { getTasks, deleteTask as apiDeleteTask } from \"../api/task\";\nexport function useTasks() {\n  _s();\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const formatStatus = status => status ? status[0] + status.substring(1).toLowerCase() : \"\";\n  const loadTasks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await getTasks();\n      const mapped = data.map(task => ({\n        id: String(task.id),\n        title: task.title,\n        description: task.description,\n        // важно добавить\n        date: new Date(task.createdAt).toLocaleDateString(),\n        status: task.status[0] + task.status.substring(1).toLowerCase(),\n        dueDate: task.dueDate // тоже важно добавить\n      }));\n      setRows(mapped);\n      setError(null);\n    } catch (err) {\n      console.error(\"Ошибка при загрузке задач\", err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks]);\n  const handleDelete = async id => {\n    try {\n      await apiDeleteTask(Number(id));\n      await loadTasks();\n    } catch (err) {\n      console.error(\"Ошибка при удалении задачи\", err);\n      alert(\"Не удалось удалить задачу\");\n    }\n  };\n  const updateTask = async task => {\n    try {\n      await apiUpdateTask({\n        id: Number(task.id),\n        title: task.title,\n        description: task.description,\n        dueDate: task.dueDate,\n        status: task.status\n      });\n      await loadTasks(); // обновить список после обновления\n    } catch (err) {\n      console.error(\"Ошибка при обновлении задачи\", err);\n      alert(\"Не удалось обновить задачу\");\n    }\n  };\n  return {\n    rows,\n    loading,\n    error,\n    refresh: loadTasks,\n    deleteTask: handleDelete,\n    updateTask\n  };\n}\n_s(useTasks, \"cXN4Xp7OEhKAX5tR0NyNN0pe5RA=\");","map":{"version":3,"names":["useCallback","useEffect","useState","updateTask","apiUpdateTask","getTasks","deleteTask","apiDeleteTask","useTasks","_s","rows","setRows","loading","setLoading","error","setError","formatStatus","status","substring","toLowerCase","loadTasks","data","mapped","map","task","id","String","title","description","date","Date","createdAt","toLocaleDateString","dueDate","err","console","handleDelete","Number","alert","refresh"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/hooks/useTasks.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { updateTask as apiUpdateTask } from \"../api/task\";\nimport {\n  getTasks,\n  deleteTask as apiDeleteTask,\n  TaskResponse,\n} from \"../api/task\";\n\ntype RowType = {\n  id: string;\n  title: string;\n  description: string;\n  date: string;\n  status: string;\n  dueDate: string;  // вместо until\n};\n\nexport function useTasks() {\n  const [rows, setRows] = useState<RowType[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  const formatStatus = (status: string) =>\n    status ? status[0] + status.substring(1).toLowerCase() : \"\";\n\n  const loadTasks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data: TaskResponse[] = await getTasks();\n      const mapped: RowType[] = data.map((task) => ({\n        id: String(task.id),\n        title: task.title,\n        description: task.description, // важно добавить\n        date: new Date(task.createdAt).toLocaleDateString(),\n        status: task.status[0] + task.status.substring(1).toLowerCase(),\n        dueDate: task.dueDate, // тоже важно добавить\n      }));\n      setRows(mapped);\n      setError(null);\n    } catch (err) {\n      console.error(\"Ошибка при загрузке задач\", err);\n      setError(err as Error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks]);\n\n  const handleDelete = async (id: string) => {\n    try {\n      await apiDeleteTask(Number(id));\n      await loadTasks();\n    } catch (err) {\n      console.error(\"Ошибка при удалении задачи\", err);\n      alert(\"Не удалось удалить задачу\");\n    }\n  };\n\n  const updateTask = async (task: {\n    id: string;\n    title: string;\n    description: string;\n    dueDate: string;\n    status: string;\n  }) => {\n    try {\n      await apiUpdateTask({\n        id: Number(task.id),\n        title: task.title,\n        description: task.description,\n        dueDate: task.dueDate,\n        status: task.status,\n      });\n      await loadTasks(); // обновить список после обновления\n    } catch (err) {\n      console.error(\"Ошибка при обновлении задачи\", err);\n      alert(\"Не удалось обновить задачу\");\n    }\n  };\n\n  return {\n    rows,\n    loading,\n    error,\n    refresh: loadTasks,\n    deleteTask: handleDelete,\n    updateTask,\n  };\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,UAAU,IAAIC,aAAa,QAAQ,aAAa;AACzD,SACEC,QAAQ,EACRC,UAAU,IAAIC,aAAa,QAEtB,aAAa;AAWpB,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EAC/C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAe,IAAI,CAAC;EAEtD,MAAMc,YAAY,GAAIC,MAAc,IAClCA,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG,EAAE;EAE7D,MAAMC,SAAS,GAAGpB,WAAW,CAAC,YAAY;IACxCa,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMQ,IAAoB,GAAG,MAAMhB,QAAQ,CAAC,CAAC;MAC7C,MAAMiB,MAAiB,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;QAC5CC,EAAE,EAAEC,MAAM,CAACF,IAAI,CAACC,EAAE,CAAC;QACnBE,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,WAAW,EAAEJ,IAAI,CAACI,WAAW;QAAE;QAC/BC,IAAI,EAAE,IAAIC,IAAI,CAACN,IAAI,CAACO,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;QACnDf,MAAM,EAAEO,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC,GAAGO,IAAI,CAACP,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC/Dc,OAAO,EAAET,IAAI,CAACS,OAAO,CAAE;MACzB,CAAC,CAAC,CAAC;MACHtB,OAAO,CAACW,MAAM,CAAC;MACfP,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZC,OAAO,CAACrB,KAAK,CAAC,2BAA2B,EAAEoB,GAAG,CAAC;MAC/CnB,QAAQ,CAACmB,GAAY,CAAC;IACxB,CAAC,SAAS;MACRrB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACdmB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMgB,YAAY,GAAG,MAAOX,EAAU,IAAK;IACzC,IAAI;MACF,MAAMlB,aAAa,CAAC8B,MAAM,CAACZ,EAAE,CAAC,CAAC;MAC/B,MAAML,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZC,OAAO,CAACrB,KAAK,CAAC,4BAA4B,EAAEoB,GAAG,CAAC;MAChDI,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAMnC,UAAU,GAAG,MAAOqB,IAMzB,IAAK;IACJ,IAAI;MACF,MAAMpB,aAAa,CAAC;QAClBqB,EAAE,EAAEY,MAAM,CAACb,IAAI,CAACC,EAAE,CAAC;QACnBE,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,WAAW,EAAEJ,IAAI,CAACI,WAAW;QAC7BK,OAAO,EAAET,IAAI,CAACS,OAAO;QACrBhB,MAAM,EAAEO,IAAI,CAACP;MACf,CAAC,CAAC;MACF,MAAMG,SAAS,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZC,OAAO,CAACrB,KAAK,CAAC,8BAA8B,EAAEoB,GAAG,CAAC;MAClDI,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,OAAO;IACL5B,IAAI;IACJE,OAAO;IACPE,KAAK;IACLyB,OAAO,EAAEnB,SAAS;IAClBd,UAAU,EAAE8B,YAAY;IACxBjC;EACF,CAAC;AACH;AAACM,EAAA,CA1EeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}