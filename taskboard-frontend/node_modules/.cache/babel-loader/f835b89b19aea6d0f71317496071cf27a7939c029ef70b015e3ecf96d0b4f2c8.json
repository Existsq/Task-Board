{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { getTasks, deleteTask as apiDeleteTask } from \"../api/task\";\nexport function useTasks() {\n  _s();\n  const [rows, setRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const formatStatus = status => status ? status[0] + status.substring(1).toLowerCase() : \"\";\n  const loadTasks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await getTasks();\n      const mapped = data.map(task => {\n        var _task$dueDate;\n        return {\n          id: String(task.id),\n          title: task.title,\n          date: task.createdAt ? new Date(task.createdAt).toLocaleDateString() : \"\",\n          status: formatStatus(task.status),\n          until: (_task$dueDate = task.dueDate) !== null && _task$dueDate !== void 0 ? _task$dueDate : \"\"\n        };\n      });\n      setRows(mapped);\n      setError(null);\n    } catch (err) {\n      console.error(\"Ошибка при загрузке задач\", err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks]);\n  const handleDelete = async id => {\n    try {\n      await apiDeleteTask(Number(id));\n      await loadTasks();\n    } catch (err) {\n      console.error(\"Ошибка при удалении задачи\", err);\n      alert(\"Не удалось удалить задачу\");\n    }\n  };\n  return {\n    rows,\n    loading,\n    error,\n    refresh: loadTasks,\n    deleteTask: handleDelete\n  };\n}\n_s(useTasks, \"cXN4Xp7OEhKAX5tR0NyNN0pe5RA=\");","map":{"version":3,"names":["useCallback","useEffect","useState","getTasks","deleteTask","apiDeleteTask","useTasks","_s","rows","setRows","loading","setLoading","error","setError","formatStatus","status","substring","toLowerCase","loadTasks","data","mapped","map","task","_task$dueDate","id","String","title","date","createdAt","Date","toLocaleDateString","until","dueDate","err","console","handleDelete","Number","alert","refresh"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/hooks/useTasks.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport {\n  getTasks,\n  deleteTask as apiDeleteTask,\n  TaskResponse,\n} from \"../api/task\";\n\ntype RowType = {\n  id: string;\n  title: string;\n  date: string;\n  status: string;\n  until: string;\n};\n\nexport function useTasks() {\n  const [rows, setRows] = useState<RowType[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  const formatStatus = (status: string) =>\n    status ? status[0] + status.substring(1).toLowerCase() : \"\";\n\n  const loadTasks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data: TaskResponse[] = await getTasks();\n      const mapped: RowType[] = data.map((task) => ({\n        id: String(task.id),\n        title: task.title,\n        date: task.createdAt\n          ? new Date(task.createdAt).toLocaleDateString()\n          : \"\",\n        status: formatStatus(task.status),\n        until: task.dueDate ?? \"\",\n      }));\n      setRows(mapped);\n      setError(null);\n    } catch (err) {\n      console.error(\"Ошибка при загрузке задач\", err);\n      setError(err as Error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadTasks();\n  }, [loadTasks]);\n\n  const handleDelete = async (id: string) => {\n    try {\n      await apiDeleteTask(Number(id));\n      await loadTasks();\n    } catch (err) {\n      console.error(\"Ошибка при удалении задачи\", err);\n      alert(\"Не удалось удалить задачу\");\n    }\n  };\n\n  return {\n    rows,\n    loading,\n    error,\n    refresh: loadTasks,\n    deleteTask: handleDelete,\n  };\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SACEC,QAAQ,EACRC,UAAU,IAAIC,aAAa,QAEtB,aAAa;AAUpB,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAY,EAAE,CAAC;EAC/C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAe,IAAI,CAAC;EAEtD,MAAMY,YAAY,GAAIC,MAAc,IAClCA,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG,EAAE;EAE7D,MAAMC,SAAS,GAAGlB,WAAW,CAAC,YAAY;IACxCW,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMQ,IAAoB,GAAG,MAAMhB,QAAQ,CAAC,CAAC;MAC7C,MAAMiB,MAAiB,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI;QAAA,IAAAC,aAAA;QAAA,OAAM;UAC5CC,EAAE,EAAEC,MAAM,CAACH,IAAI,CAACE,EAAE,CAAC;UACnBE,KAAK,EAAEJ,IAAI,CAACI,KAAK;UACjBC,IAAI,EAAEL,IAAI,CAACM,SAAS,GAChB,IAAIC,IAAI,CAACP,IAAI,CAACM,SAAS,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAC7C,EAAE;UACNf,MAAM,EAAED,YAAY,CAACQ,IAAI,CAACP,MAAM,CAAC;UACjCgB,KAAK,GAAAR,aAAA,GAAED,IAAI,CAACU,OAAO,cAAAT,aAAA,cAAAA,aAAA,GAAI;QACzB,CAAC;MAAA,CAAC,CAAC;MACHd,OAAO,CAACW,MAAM,CAAC;MACfP,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZC,OAAO,CAACtB,KAAK,CAAC,2BAA2B,EAAEqB,GAAG,CAAC;MAC/CpB,QAAQ,CAACoB,GAAY,CAAC;IACxB,CAAC,SAAS;MACRtB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACdiB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMiB,YAAY,GAAG,MAAOX,EAAU,IAAK;IACzC,IAAI;MACF,MAAMnB,aAAa,CAAC+B,MAAM,CAACZ,EAAE,CAAC,CAAC;MAC/B,MAAMN,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZC,OAAO,CAACtB,KAAK,CAAC,4BAA4B,EAAEqB,GAAG,CAAC;MAChDI,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,OAAO;IACL7B,IAAI;IACJE,OAAO;IACPE,KAAK;IACL0B,OAAO,EAAEpB,SAAS;IAClBd,UAAU,EAAE+B;EACd,CAAC;AACH;AAAC5B,EAAA,CApDeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}