{"ast":null,"code":"var _jsxFileName = \"/Users/exist/Desktop/work/taskboard-frontend/src/pages/dashboard/DashboardContent.tsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/joy\";\nimport TaskList from \"../../components/dashboard/TaskList\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport TaskTable from \"../../components/dashboard/TaskTable\";\nimport Sidebar from \"../../components/dashboard/sidebar/Sidebar\";\nimport { useTasks } from \"../../hooks/useTasks\";\nimport { useState } from \"react\";\nimport EditTaskModal from \"../../components/dashboard/EditTaskModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardContent() {\n  _s();\n  const {\n    rows,\n    loading,\n    deleteTask,\n    refresh,\n    updateTask\n  } = useTasks();\n  const [editingTask, setEditingTask] = useState(null);\n  const handleDelete = async id => {\n    await deleteTask(id);\n    refresh();\n  };\n  const handleEdit = id => {\n    const task = rows.find(r => r.id === id);\n    if (task) setEditingTask(task);\n  };\n  const handleSave = async updatedTask => {\n    await updateTask({\n      id: String(updatedTask.id),\n      title: updatedTask.title,\n      description: updatedTask.description,\n      dueDate: updatedTask.dueDate,\n      status: updatedTask.status\n    });\n    refresh();\n  };\n  const handleUpdate = async updatedTask => {\n    await updateTask({\n      ...updatedTask,\n      id: String(updatedTask.id) // на всякий случай\n    });\n    setEditingTask(null);\n    refresh();\n  };\n  const handleCloseEdit = () => {\n    setEditingTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      minHeight: \"100dvh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onTaskCreated: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      className: \"MainContent\",\n      sx: {\n        px: {\n          xs: 2,\n          md: 6\n        },\n        pt: {\n          xs: \"calc(12px + var(--Header-height))\",\n          sm: \"calc(12px + var(--Header-height))\",\n          md: 3\n        },\n        pb: {\n          xs: 2,\n          sm: 2,\n          md: 3\n        },\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        minWidth: 0,\n        height: \"100dvh\",\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(DashboardHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n        rows: rows,\n        loading: loading,\n        onDelete: handleDelete,\n        onEdit: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n        task: {\n          id: editingTask.id,\n          title: editingTask.title,\n          description: editingTask.description,\n          dueDate: editingTask.dueDate,\n          status: editingTask.status\n        },\n        onClose: handleCloseEdit,\n        onSave: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardContent, \"BhoFRYIMYbLjlouWWZFMejKbeJ0=\", false, function () {\n  return [useTasks];\n});\n_c = DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["Box","TaskList","DashboardHeader","TaskTable","Sidebar","useTasks","useState","EditTaskModal","jsxDEV","_jsxDEV","DashboardContent","_s","rows","loading","deleteTask","refresh","updateTask","editingTask","setEditingTask","handleDelete","id","handleEdit","task","find","r","handleSave","updatedTask","String","title","description","dueDate","status","handleUpdate","handleCloseEdit","sx","display","minHeight","children","onTaskCreated","fileName","_jsxFileName","lineNumber","columnNumber","component","className","px","xs","md","pt","sm","pb","flex","flexDirection","minWidth","height","gap","onDelete","onEdit","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/pages/dashboard/DashboardContent.tsx"],"sourcesContent":["import { Box } from \"@mui/joy\";\nimport TaskList from \"../../components/dashboard/TaskList\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport TaskTable from \"../../components/dashboard/TaskTable\";\nimport Sidebar from \"../../components/dashboard/sidebar/Sidebar\";\nimport { useTasks } from \"../../hooks/useTasks\";\nimport { useState } from \"react\";\nimport EditTaskModal from \"../../components/dashboard/EditTaskModal\";\nimport { TaskResponse } from \"../../api/task\";\n\nexport type Task = {\n  id: string;\n  title: string;\n  description: string;\n  dueDate: string;\n  status: string;\n};\n\nexport default function DashboardContent() {\n  const { rows, loading, deleteTask, refresh, updateTask } = useTasks();\n\n  const [editingTask, setEditingTask] = useState<null | (typeof rows)[0]>(null);\n\n  const handleDelete = async (id: string) => {\n    await deleteTask(id);\n    refresh();\n  };\n\n  const handleEdit = (id: string) => {\n    const task = rows.find((r) => r.id === id);\n    if (task) setEditingTask(task);\n  };\n\n  const handleSave = async (updatedTask: TaskResponse) => {\n    await updateTask({\n      id: String(updatedTask.id),\n      title: updatedTask.title,\n      description: updatedTask.description,\n      dueDate: updatedTask.dueDate,\n      status: updatedTask.status,\n    });\n    refresh();\n  };\n\n  const handleUpdate = async (updatedTask: Task) => {\n    await updateTask({\n      ...updatedTask,\n      id: String(updatedTask.id), // на всякий случай\n    });\n    setEditingTask(null);\n    refresh();\n  };\n\n  const handleCloseEdit = () => {\n    setEditingTask(null);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", minHeight: \"100dvh\" }}>\n      <Sidebar onTaskCreated={refresh} />\n\n      <Box\n        component=\"main\"\n        className=\"MainContent\"\n        sx={{\n          px: { xs: 2, md: 6 },\n          pt: {\n            xs: \"calc(12px + var(--Header-height))\",\n            sm: \"calc(12px + var(--Header-height))\",\n            md: 3,\n          },\n          pb: { xs: 2, sm: 2, md: 3 },\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n          height: \"100dvh\",\n          gap: 1,\n        }}\n      >\n        <DashboardHeader />\n        <TaskTable\n          rows={rows}\n          loading={loading}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n        />\n        <TaskList />\n\n        {/* Модалка редактирования */}\n        {editingTask && (\n          <EditTaskModal\n            task={{\n              id: editingTask.id,\n              title: editingTask.title,\n              description: editingTask.description,\n              dueDate: editingTask.dueDate,\n              status: editingTask.status,\n            }}\n            onClose={handleCloseEdit}\n            onSave={handleUpdate}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}