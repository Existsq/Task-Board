{"ast":null,"code":"import _objectSpread from\"/Users/exist/Desktop/work/taskboard-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/exist/Desktop/work/taskboard-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"onClick\",\"sx\"];import*as React from'react';import{useColorScheme}from'@mui/joy/styles';import IconButton from'@mui/joy/IconButton';import DarkModeRoundedIcon from'@mui/icons-material/DarkModeRounded';import LightModeIcon from'@mui/icons-material/LightMode';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ColorSchemeToggle(props){const{onClick,sx}=props,other=_objectWithoutProperties(props,_excluded);const{mode,setMode}=useColorScheme();const[mounted,setMounted]=React.useState(false);React.useEffect(()=>{setMounted(true);},[]);if(!mounted){return/*#__PURE__*/_jsx(IconButton,_objectSpread(_objectSpread({size:\"sm\",variant:\"outlined\",color:\"neutral\"},other),{},{sx:sx,disabled:true}));}return/*#__PURE__*/_jsxs(IconButton,_objectSpread(_objectSpread({\"data-screenshot\":\"toggle-mode\",size:\"sm\",variant:\"outlined\",color:\"neutral\"},other),{},{onClick:event=>{if(mode==='light'){setMode('dark');}else{setMode('light');}onClick===null||onClick===void 0?void 0:onClick(event);},sx:[mode==='dark'?{'& > *:first-child':{display:'none'}}:{'& > *:first-child':{display:'initial'}},mode==='light'?{'& > *:last-child':{display:'none'}}:{'& > *:last-child':{display:'initial'}},...(Array.isArray(sx)?sx:[sx])],children:[/*#__PURE__*/_jsx(DarkModeRoundedIcon,{}),/*#__PURE__*/_jsx(LightModeIcon,{})]}));}","map":{"version":3,"names":["React","useColorScheme","IconButton","DarkModeRoundedIcon","LightModeIcon","jsx","_jsx","jsxs","_jsxs","ColorSchemeToggle","props","onClick","sx","other","_objectWithoutProperties","_excluded","mode","setMode","mounted","setMounted","useState","useEffect","_objectSpread","size","variant","color","disabled","event","display","Array","isArray","children"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/components/theme/ColorSchemeToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useColorScheme } from '@mui/joy/styles';\nimport IconButton, { IconButtonProps } from '@mui/joy/IconButton';\n\nimport DarkModeRoundedIcon from '@mui/icons-material/DarkModeRounded';\nimport LightModeIcon from '@mui/icons-material/LightMode';\n\nexport default function ColorSchemeToggle(props: IconButtonProps) {\n  const { onClick, sx, ...other } = props;\n  const { mode, setMode } = useColorScheme();\n  const [mounted, setMounted] = React.useState(false);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  if (!mounted) {\n    return (\n      <IconButton\n        size=\"sm\"\n        variant=\"outlined\"\n        color=\"neutral\"\n        {...other}\n        sx={sx}\n        disabled\n      />\n    );\n  }\n  return (\n    <IconButton\n      data-screenshot=\"toggle-mode\"\n      size=\"sm\"\n      variant=\"outlined\"\n      color=\"neutral\"\n      {...other}\n      onClick={(event) => {\n        if (mode === 'light') {\n          setMode('dark');\n        } else {\n          setMode('light');\n        }\n        onClick?.(event);\n      }}\n      sx={[\n        mode === 'dark'\n          ? { '& > *:first-child': { display: 'none' } }\n          : { '& > *:first-child': { display: 'initial' } },\n        mode === 'light'\n          ? { '& > *:last-child': { display: 'none' } }\n          : { '& > *:last-child': { display: 'initial' } },\n        ...(Array.isArray(sx) ? sx : [sx]),\n      ]}\n    >\n      <DarkModeRoundedIcon />\n      <LightModeIcon />\n    </IconButton>\n  );\n}"],"mappings":"wTAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,OAASC,cAAc,KAAQ,iBAAiB,CAChD,MAAO,CAAAC,UAAU,KAA2B,qBAAqB,CAEjE,MAAO,CAAAC,mBAAmB,KAAM,qCAAqC,CACrE,MAAO,CAAAC,aAAa,KAAM,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1D,cAAe,SAAS,CAAAC,iBAAiBA,CAACC,KAAsB,CAAE,CAChE,KAAM,CAAEC,OAAO,CAAEC,EAAa,CAAC,CAAGF,KAAK,CAAfG,KAAK,CAAAC,wBAAA,CAAKJ,KAAK,CAAAK,SAAA,EACvC,KAAM,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGhB,cAAc,CAAC,CAAC,CAC1C,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC,CACnDpB,KAAK,CAACqB,SAAS,CAAC,IAAM,CACpBF,UAAU,CAAC,IAAI,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CACN,GAAI,CAACD,OAAO,CAAE,CACZ,mBACEZ,IAAA,CAACJ,UAAU,CAAAoB,aAAA,CAAAA,aAAA,EACTC,IAAI,CAAC,IAAI,CACTC,OAAO,CAAC,UAAU,CAClBC,KAAK,CAAC,SAAS,EACXZ,KAAK,MACTD,EAAE,CAAEA,EAAG,CACPc,QAAQ,OACT,CAAC,CAEN,CACA,mBACElB,KAAA,CAACN,UAAU,CAAAoB,aAAA,CAAAA,aAAA,EACT,kBAAgB,aAAa,CAC7BC,IAAI,CAAC,IAAI,CACTC,OAAO,CAAC,UAAU,CAClBC,KAAK,CAAC,SAAS,EACXZ,KAAK,MACTF,OAAO,CAAGgB,KAAK,EAAK,CAClB,GAAIX,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACjB,CAAC,IAAM,CACLA,OAAO,CAAC,OAAO,CAAC,CAClB,CACAN,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAGgB,KAAK,CAAC,CAClB,CAAE,CACFf,EAAE,CAAE,CACFI,IAAI,GAAK,MAAM,CACX,CAAE,mBAAmB,CAAE,CAAEY,OAAO,CAAE,MAAO,CAAE,CAAC,CAC5C,CAAE,mBAAmB,CAAE,CAAEA,OAAO,CAAE,SAAU,CAAE,CAAC,CACnDZ,IAAI,GAAK,OAAO,CACZ,CAAE,kBAAkB,CAAE,CAAEY,OAAO,CAAE,MAAO,CAAE,CAAC,CAC3C,CAAE,kBAAkB,CAAE,CAAEA,OAAO,CAAE,SAAU,CAAE,CAAC,CAClD,IAAIC,KAAK,CAACC,OAAO,CAAClB,EAAE,CAAC,CAAGA,EAAE,CAAG,CAACA,EAAE,CAAC,CAAC,CAClC,CAAAmB,QAAA,eAEFzB,IAAA,CAACH,mBAAmB,GAAE,CAAC,cACvBG,IAAA,CAACF,aAAa,GAAE,CAAC,GACP,CAAC,CAEjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}