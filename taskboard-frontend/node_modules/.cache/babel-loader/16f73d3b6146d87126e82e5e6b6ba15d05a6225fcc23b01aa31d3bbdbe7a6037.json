{"ast":null,"code":"var _jsxFileName = \"/Users/exist/Desktop/work/taskboard-frontend/src/pages/dashboard/DashboardContent.tsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/joy\";\nimport { useState } from \"react\";\nimport TaskList from \"../../components/dashboard/TaskList\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport TaskTable from \"../../components/dashboard/TaskTable\";\nimport Sidebar from \"../../components/dashboard/Sidebar\";\nimport EditTaskModal from \"../../components/dashboard/EditTaskModal\";\nimport { useTasks } from \"../../hooks/useTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Тип задачи из API\n\nexport default function DashboardContent() {\n  _s();\n  const {\n    rows,\n    loading,\n    deleteTask,\n    refresh,\n    updateTask\n  } = useTasks();\n  const [editingTask, setEditingTask] = useState(null);\n  const handleDelete = async id => {\n    await deleteTask(id);\n    refresh();\n  };\n  const handleEdit = id => {\n    var _row$description, _row$dueDate;\n    const row = rows.find(r => r.id === id);\n    if (!row) return;\n\n    // Преобразуем RowType → Task\n    const task = {\n      id: row.id,\n      title: row.title,\n      description: (_row$description = row.description) !== null && _row$description !== void 0 ? _row$description : \"\",\n      // добавь description в RowType, если надо\n      dueDate: (_row$dueDate = row.dueDate) !== null && _row$dueDate !== void 0 ? _row$dueDate : \"\",\n      // и dueDate\n      status: row.status\n    };\n    setEditingTask(task);\n  };\n  const handleUpdate = async updatedTask => {\n    await updateTask(updatedTask);\n    setEditingTask(null);\n    refresh();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      minHeight: \"100dvh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onTaskCreated: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      className: \"MainContent\",\n      sx: {\n        px: {\n          xs: 2,\n          md: 6\n        },\n        pt: {\n          xs: \"calc(12px + var(--Header-height))\",\n          sm: \"calc(12px + var(--Header-height))\",\n          md: 3\n        },\n        pb: {\n          xs: 2,\n          sm: 2,\n          md: 3\n        },\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        minWidth: 0,\n        height: \"100dvh\",\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(DashboardHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n        rows: rows,\n        loading: loading,\n        onDelete: handleDelete,\n        onEdit: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n        task: editingTask,\n        onClose: () => setEditingTask(null),\n        onSave: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardContent, \"BhoFRYIMYbLjlouWWZFMejKbeJ0=\", false, function () {\n  return [useTasks];\n});\n_c = DashboardContent;\nvar _c;\n$RefreshReg$(_c, \"DashboardContent\");","map":{"version":3,"names":["Box","useState","TaskList","DashboardHeader","TaskTable","Sidebar","EditTaskModal","useTasks","jsxDEV","_jsxDEV","DashboardContent","_s","rows","loading","deleteTask","refresh","updateTask","editingTask","setEditingTask","handleDelete","id","handleEdit","_row$description","_row$dueDate","row","find","r","task","title","description","dueDate","status","handleUpdate","updatedTask","sx","display","minHeight","children","onTaskCreated","fileName","_jsxFileName","lineNumber","columnNumber","component","className","px","xs","md","pt","sm","pb","flex","flexDirection","minWidth","height","gap","onDelete","onEdit","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/pages/dashboard/DashboardContent.tsx"],"sourcesContent":["import { Box } from \"@mui/joy\";\nimport { useState } from \"react\";\n\nimport TaskList from \"../../components/dashboard/TaskList\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport TaskTable, { RowType } from \"../../components/dashboard/TaskTable\";\nimport Sidebar from \"../../components/dashboard/Sidebar\";\nimport EditTaskModal from \"../../components/dashboard/EditTaskModal\";\nimport { useTasks } from \"../../hooks/useTasks\";\nimport { Task } from \"../../api/task\"; // Тип задачи из API\n\nexport default function DashboardContent() {\n  const { rows, loading, deleteTask, refresh, updateTask } = useTasks();\n\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\n\n  const handleDelete = async (id: string) => {\n    await deleteTask(id);\n    refresh();\n  };\n\n  const handleEdit = (id: string) => {\n    const row = rows.find((r) => r.id === id);\n    if (!row) return;\n\n    // Преобразуем RowType → Task\n    const task: Task = {\n      id: row.id,\n      title: row.title,\n      description: row.description ?? \"\", // добавь description в RowType, если надо\n      dueDate: row.dueDate ?? \"\",        // и dueDate\n      status: row.status,\n    };\n\n    setEditingTask(task);\n  };\n\n  const handleUpdate = async (updatedTask: Task) => {\n    await updateTask(updatedTask);\n    setEditingTask(null);\n    refresh();\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", minHeight: \"100dvh\" }}>\n      <Sidebar onTaskCreated={refresh} />\n\n      <Box\n        component=\"main\"\n        className=\"MainContent\"\n        sx={{\n          px: { xs: 2, md: 6 },\n          pt: {\n            xs: \"calc(12px + var(--Header-height))\",\n            sm: \"calc(12px + var(--Header-height))\",\n            md: 3,\n          },\n          pb: { xs: 2, sm: 2, md: 3 },\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n          height: \"100dvh\",\n          gap: 1,\n        }}\n      >\n        <DashboardHeader />\n        <TaskTable\n          rows={rows}\n          loading={loading}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n        />\n        <TaskList />\n\n        {editingTask && (\n          <EditTaskModal\n            task={editingTask}\n            onClose={() => setEditingTask(null)}\n            onSave={handleUpdate}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}