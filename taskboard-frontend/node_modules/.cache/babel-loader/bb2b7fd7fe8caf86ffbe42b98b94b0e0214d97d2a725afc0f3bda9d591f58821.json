{"ast":null,"code":"export async function getTasks() {\n  const token = localStorage.getItem(\"jwt\");\n  const res = await fetch(\"http://localhost:9090/api/v1/tasks\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    throw new Error(\"Не удалось загрузить задачи\");\n  }\n  return res.json();\n}\nexport async function deleteTask(id) {\n  const token = localStorage.getItem(\"jwt\");\n  const res = await fetch(`http://localhost:9090/api/v1/tasks/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    throw new Error(\"Не удалось удалить задачу\");\n  }\n}\nexport async function createTask(task) {\n  const token = localStorage.getItem(\"jwt\");\n  const res = await fetch(\"http://localhost:9090/api/v1/tasks\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(task)\n  });\n  if (!res.ok) {\n    throw new Error(\"Не удалось создать задачу\");\n  }\n  return res.json();\n}","map":{"version":3,"names":["getTasks","token","localStorage","getItem","res","fetch","headers","Authorization","ok","Error","json","deleteTask","id","method","createTask","task","body","JSON","stringify"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/api/task.ts"],"sourcesContent":["export type TaskResponse = {\n  id: number;\n  title: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n  status: string;\n  dueDate: string;\n};\n\nexport async function getTasks(): Promise<TaskResponse[]> {\n  const token = localStorage.getItem(\"jwt\");\n  const res = await fetch(\"http://localhost:9090/api/v1/tasks\", {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (!res.ok) {\n    throw new Error(\"Не удалось загрузить задачи\");\n  }\n\n  return res.json();\n}\n\nexport async function deleteTask(id: number): Promise<void> {\n  const token = localStorage.getItem(\"jwt\");\n  const res = await fetch(`http://localhost:9090/api/v1/tasks/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (!res.ok) {\n    throw new Error(\"Не удалось удалить задачу\");\n  }\n}\n\nexport async function createTask(task: {\n  title: string;\n  description: string;\ndueDate: string;\n  status: string;\n}) {\n  const token = localStorage.getItem(\"jwt\");\n  const res = await fetch(\"http://localhost:9090/api/v1/tasks\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(task),\n  });\n\n  if (!res.ok) {\n    throw new Error(\"Не удалось создать задачу\");\n  }\n\n  return res.json();\n}"],"mappings":"AAUA,OAAO,eAAeA,QAAQA,CAAA,EAA4B;EACxD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;EACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IAC5DC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUN,KAAK;IAChC;EACF,CAAC,CAAC;EAEF,IAAI,CAACG,GAAG,CAACI,EAAE,EAAE;IACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,UAAUA,CAACC,EAAU,EAAiB;EAC1D,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;EACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsCO,EAAE,EAAE,EAAE;IAClEC,MAAM,EAAE,QAAQ;IAChBP,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUN,KAAK;IAChC;EACF,CAAC,CAAC;EAEF,IAAI,CAACG,GAAG,CAACI,EAAE,EAAE;IACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;AACF;AAEA,OAAO,eAAeK,UAAUA,CAACC,IAKhC,EAAE;EACD,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;EACzC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IAC5DQ,MAAM,EAAE,MAAM;IACdP,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUN,KAAK;IAChC,CAAC;IACDe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,CAAC;EAEF,IAAI,CAACX,GAAG,CAACI,EAAE,EAAE;IACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EAEA,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}