{"ast":null,"code":"var _jsxFileName = \"/Users/exist/Desktop/work/taskboard-frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n\n  // Включаем withCredentials глобально\n  axios.defaults.withCredentials = true;\n\n  // Проверка авторизации по эндпоинту /me\n  const checkAuth = useCallback(async () => {\n    try {\n      await axios.get(\"http://localhost:9090/api/v1/auth/me\");\n      setIsAuthenticated(true);\n    } catch {\n      setIsAuthenticated(false);\n    }\n  }, []);\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n  const login = async (email, password) => {\n    await axios.post(\"http://localhost:9090/api/v1/auth/login\", {\n      email,\n      password\n    });\n    // После успешного логина обновляем статус\n    await checkAuth();\n  };\n  const register = async (email, password) => {\n    await axios.post(\"http://localhost:9090/api/v1/auth/register\", {\n      email,\n      password\n    });\n    await checkAuth();\n  };\n  const logout = async () => {\n    await axios.post(\"http://localhost:9090/api/v1/auth/logout\");\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      register,\n      logout,\n      isAuthenticated,\n      checkAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"4ZNd0rOVJ8a9dKZjLLUnYpo81O8=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","defaults","withCredentials","checkAuth","get","login","email","password","post","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/exist/Desktop/work/taskboard-frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n  useCallback,\n} from \"react\";\nimport axios from \"axios\";\n\ninterface AuthContextType {\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  isAuthenticated: boolean | null;\n  checkAuth: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\n\n  // Включаем withCredentials глобально\n  axios.defaults.withCredentials = true;\n\n  // Проверка авторизации по эндпоинту /me\n  const checkAuth = useCallback(async () => {\n    try {\n      await axios.get(\"http://localhost:9090/api/v1/auth/me\");\n      setIsAuthenticated(true);\n    } catch {\n      setIsAuthenticated(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  const login = async (email: string, password: string) => {\n    await axios.post(\n      \"http://localhost:9090/api/v1/auth/login\",\n      { email, password }\n    );\n    // После успешного логина обновляем статус\n    await checkAuth();\n  };\n\n  const register = async (email: string, password: string) => {\n    await axios.post(\n      \"http://localhost:9090/api/v1/auth/register\",\n      { email, password }\n    );\n    await checkAuth();\n  };\n\n  const logout = async () => {\n    await axios.post(\"http://localhost:9090/api/v1/auth/logout\");\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ login, register, logout, isAuthenticated, checkAuth }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,SAAS,EAETC,WAAW,QACN,OAAO;AACd,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,WAAW,gBAAGR,aAAa,CAA8BS,SAAS,CAAC;AAMzE,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAA4B,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAiB,IAAI,CAAC;;EAE5E;EACAG,KAAK,CAACU,QAAQ,CAACC,eAAe,GAAG,IAAI;;EAErC;EACA,MAAMC,SAAS,GAAGb,WAAW,CAAC,YAAY;IACxC,IAAI;MACF,MAAMC,KAAK,CAACa,GAAG,CAAC,sCAAsC,CAAC;MACvDJ,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,MAAM;MACNA,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAME,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,MAAMhB,KAAK,CAACiB,IAAI,CACd,yCAAyC,EACzC;MAAEF,KAAK;MAAEC;IAAS,CACpB,CAAC;IACD;IACA,MAAMJ,SAAS,CAAC,CAAC;EACnB,CAAC;EAED,MAAMM,QAAQ,GAAG,MAAAA,CAAOH,KAAa,EAAEC,QAAgB,KAAK;IAC1D,MAAMhB,KAAK,CAACiB,IAAI,CACd,4CAA4C,EAC5C;MAAEF,KAAK;MAAEC;IAAS,CACpB,CAAC;IACD,MAAMJ,SAAS,CAAC,CAAC;EACnB,CAAC;EAED,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMnB,KAAK,CAACiB,IAAI,CAAC,0CAA0C,CAAC;IAC5DR,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACiB,QAAQ;IACnBC,KAAK,EAAE;MAAEP,KAAK;MAAEI,QAAQ;MAAEC,MAAM;MAAEX,eAAe;MAAEI;IAAU,CAAE;IAAAN,QAAA,EAE9DA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAClB,EAAA,CAjDeF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAmD5B,OAAO,SAASsB,OAAOA,CAAA,EAAoB;EAAAC,GAAA;EACzC,MAAMC,OAAO,GAAGjC,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAAC0B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}